{"version":3,"sources":["components/NotificationNumberExist/NotificationNumberExist.module.css","components/NotificationNumberExist/Animation.module.css","components/Contacts/ContactsAnimation.module.css","redux/auth/authActions.js","redux/auth/authReducer.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/contacts/contactsSelectors.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","components/NotificationNumberExist/index.jsx","utils/validator.js","components/Form/index.jsx","components/Contacts/index.jsx","components/Filter/index.jsx","components/Modal/index.jsx","views/ContactsView.js","components/Navigation/index.jsx","components/UserMenu/index.jsx","components/AuthHav/index.jsx","components/AppBar/index.jsx","routes/routes.js","routes/PrivateRoute.js","routes/PublicRoute.js","redux/notification/notificationsAction.js","redux/notification/notificationsReducer.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Modal/Modal.module.css"],"names":["module","exports","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","console","log","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","getUseremail","getAllContacts","contacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","number","includes","String","initContactsRequest","initContactsSuccess","initContactsError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","changeFilter","baseURL","operations","addContact","contact","then","catch","massage","delContact","id","delete","fetchContacts","NotificationNumberExist","className","s","card","validatePhoneNumber","validator","isMobilePhone","Form","closeModal","useState","setName","setNumber","sameContact","setSameContact","useSelector","selectors","useDispatch","handleChange","e","target","value","CSSTransition","in","timeout","classNames","Animation","unmountOnExit","form","onSubmit","preventDefault","some","setTimeout","alert","label","TextField","input","type","placeholder","onChange","required","variant","maxLength","rule","button","disabled","Button","color","Contacts","onDelete","TransitionGroup","component","list","map","elem","ContactsAnimation","item","onClick","Filter","initialValue","action","Modal","children","handleKeyDown","useEffect","window","addEventListener","Overlay","currentTarget","connect","initContacts","showModal","setShowModal","code","toggleModal","style","margin","onChangeFilter","onClose","useStyles","makeStyles","theme","root","display","width","spacing","link","textDecoration","Navigation","authSelectors","useTheme","classes","ThemeProvider","to","exact","role","aria-label","Typography","Link","wrap","marginLeft","nameWrap","flexDirection","small","height","fontSize","whiteSpace","padding","backgroundColor","UserMenu","Box","title","Avatar","alt","src","authOperations","AuthNAv","Container","maxWidth","alignItems","justifyContent","AppBar","position","Toolbar","Component","redirectTo","routeProps","render","props","restricted","errorPopup","notification","notificationActions","HomeView","lazy","RegisterView","LoginView","App","authError","showNotification","fallback","path","routes","ContactsView","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","notificationReducer","devTools","process","persistor","persistStore","ReactDOM","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.ef7c9392.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"NotificationNumberExist_card__18s3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Animation_enter__13QLD\",\"enterActive\":\"Animation_enterActive__wkeCp\",\"exit\":\"Animation_exit__GaSXQ\",\"exitActive\":\"Animation_exitActive__3iM1W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactsAnimation_enter__Aj8Vv\",\"enterActive\":\"ContactsAnimation_enterActive__3TDx5\",\"exit\":\"ContactsAnimation_exit__3GT3M\",\"exitActive\":\"ContactsAnimation_exitActive__3absw\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error,\r\n});\r\n","import axios from 'axios'\r\nimport authActions from './authActions'\r\n\r\n// axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n        console.log(\"Добавить уведомление об ошибке регистрации и ее причине(из ответа сервера)\", error)\r\n        dispatch(authActions.registerError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/login', credentials);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.loginSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(error.message, \"Добавить уведомление об ошибке логина и ее причине(из ответа сервера)\", error);\r\n        dispatch(authActions.loginError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n        console.log(\"Добавить уведомление об ошибке выхода и ее причине(из ответа сервера)\", error);\r\n        dispatch(authActions.logoutError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n        dispatch(authActions.getCurrentUserSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.message));\r\n    }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getUseremail = state => state.auth.user.email;\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUsername,\r\n    getUseremail,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit'\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContactsLength = state => {\r\n    const allContacts = getAllContacts(state);\r\n    return allContacts.length;\r\n};\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(({ name, number }) =>\r\n            name.toLowerCase().includes(normalizedFilter) ||\r\n            String(number).includes(normalizedFilter)\r\n        );\r\n    },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const initContactsRequest = createAction('app/initStateRequest');\r\nexport const initContactsSuccess = createAction('app/initStateSuccess');\r\nexport const initContactsError = createAction('app/initStateError');\r\n\r\nexport const addContactRequest = createAction('form/addContactRequest');\r\nexport const addContactSuccess = createAction('form/addContactSuccess', (payload) => {\r\n    return {\r\n        payload,\r\n    }\r\n});\r\nexport const addContactError = createAction('form/addContactError');\r\n\r\nexport const delContactRequest = createAction('contact/delContactRequest');\r\nexport const delContactSuccess = createAction('contact/delContactSuccess');\r\nexport const delContactError = createAction('contact/delContactError');\r\nexport const filterContacts = createAction('contact/filterContacts');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import axios from 'axios'\r\nimport {\r\n    initContactsRequest,\r\n    initContactsSuccess,\r\n    initContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    delContactRequest,\r\n    delContactSuccess,\r\n    delContactError,\r\n} from './contactsActions'\r\n// import token from '../auth/authOperations';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com'\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(initContactsRequest());\r\n    await axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(initContactsSuccess(data)))\r\n        .catch(error => dispatch(initContactsError(error.massage)));\r\n};\r\n\r\nconst addContact = contact => dispatch => {\r\n    dispatch(addContactRequest());\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => console.log(data) || dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error.massage)));\r\n};\r\n\r\nconst delContact = id => dispatch => {\r\n    dispatch(delContactRequest());\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(delContactSuccess(id)))\r\n        .catch(error => dispatch(delContactError(error.massage)));\r\n};\r\n\r\nconst operations = {\r\n    addContact,\r\n    delContact,\r\n    fetchContacts,\r\n};\r\n\r\nexport default operations;\r\n","import React from \"react\"\nimport s from './NotificationNumberExist.module.css'\n\n\nconst NotificationNumberExist = ({ message }) => {\n    return (<p className={s.card}>{message}</p>);\n};\n\nexport default NotificationNumberExist;\n","import validator from 'validator'\n\nconst validatePhoneNumber = number => {\n    const isValidPhoneNumber = validator.isMobilePhone(number, \"uk-UA\");\n    return (isValidPhoneNumber);\n};\n\nexport default validatePhoneNumber;\n","import { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport NotificationNumberExist from '../NotificationNumberExist'\r\nimport Animation from '../NotificationNumberExist/Animation.module.css'\r\nimport s from './Form.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport validatePhoneNumber from '../../utils/validator'\r\nimport * as selectors from '../../redux/contacts/contactsSelectors'\r\nimport operations from '../../redux/contacts/contactsOperations'\r\nimport { Button, TextField } from '@material-ui/core'\r\n\r\nconst Form = ({ closeModal }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [sameContact, setSameContact] = useState(false);\r\n\r\n  const contacts = useSelector(state => selectors.getAllContacts(state));\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    e.preventDefault();\r\n\r\n    if (contacts.some(({ number }) => number === contact.number)) {\r\n      setSameContact(true);\r\n      setTimeout(() => {\r\n        setSameContact(false);\r\n      }, 500);\r\n      return;\r\n    }\r\n\r\n    if (validatePhoneNumber(number) === true) {\r\n      setName(name);\r\n      setNumber(number);\r\n      dispatch(operations.addContact(contact));\r\n\r\n      setName('');\r\n      setNumber('');\r\n      closeModal();\r\n    } else {\r\n      alert(\"Enter correct number, please\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"heading\">\r\n        {/* <Heading /> */}\r\n\r\n        <CSSTransition\r\n          in={sameContact}\r\n          timeout={500}\r\n          classNames={Animation}\r\n          unmountOnExit\r\n        >\r\n          <NotificationNumberExist message=\"The contact is already exists.\" />\r\n        </CSSTransition>\r\n      </div>\r\n      <form className={s.form}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <label className={s.label}>\r\n          {/* Name <span className={s.star}>&#42;</span> */}\r\n          <TextField\r\n            className={s.input}\r\n            type='text'\r\n            name='name'\r\n            placeholder='Enter the name'\r\n            value={name}\r\n            onChange={handleChange}\r\n            required\r\n            variant=\"outlined\"\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          {/* Number <span className={s.star}>&#42;</span> */}\r\n          <TextField\r\n            className={s.input}\r\n            type='number'\r\n            name='number'\r\n            placeholder='+380'\r\n            value={number}\r\n            maxLength=\"13\"\r\n            onChange={handleChange}\r\n            required\r\n            variant=\"outlined\"\r\n          />\r\n          <span className={s.rule}>\r\n            {/* <span className={s.star}>&#42;</span> - obligatory fields. */}\r\n          </span>\r\n        </label>\r\n        <button\r\n          className={s.button}\r\n          // onSubmit={Form.propTypes.checkContact} //?\r\n          disabled={false}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Add contact\r\n              </Button>\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onChange: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n\r\nimport s from './Contacts.module.css'\r\nimport ContactsAnimation from './ContactsAnimation.module.css'\r\nimport DeleteTwoTone from '@material-ui/icons/DeleteTwoTone'\r\n\r\nconst Contacts = ({ contacts, onDelete }) => {\r\n    return (<div>\r\n        <TransitionGroup\r\n            component=\"ul\"\r\n            className={s.list}\r\n        >\r\n            {contacts.map((elem, id) => (\r\n                <CSSTransition\r\n                    key={id}\r\n                    timeout={250}\r\n                    classNames={ContactsAnimation}\r\n                >\r\n                    <li className={s.item} key={id}>\r\n                        {`${elem.name}: ${elem.number}`}\r\n                        <button\r\n                            className={s.button}\r\n                            onClick={() => onDelete(elem.id)}\r\n                        >\r\n                            <DeleteTwoTone\r\n                                color=\"disabled\"\r\n                            />\r\n\r\n                        </button>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))}\r\n        </TransitionGroup>\r\n    </div>\r\n    );\r\n};\r\n\r\nContacts.propTypes = {\r\n    onDelete: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport s from './Filter.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport * as selectors from '../../redux/contacts/contactsSelectors'\r\nimport * as action from '../../redux/contacts/contactsActions'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nconst Filter = () => {\r\n  const initialValue = useSelector(state => selectors.getFilter(state));\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <div >\r\n        <TextField\r\n          className={s.input}\r\n          type='text'\r\n          name='filter'\r\n          placeholder='Find contacts by name'\r\n          value={initialValue}\r\n          onChange={e => dispatch(action.changeFilter(e.target.value))}\r\n          variant=\"outlined\"\r\n        ></TextField>\r\n      </div>\r\n    </label >\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n  filter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport s from \"./Modal.module.css\"\r\n\r\nconst Modal = ({ children, handleKeyDown, closeModal }) => {\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown)\r\n  }, [handleKeyDown]);\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={s.Overlay}\r\n      onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux'\r\nimport * as selectors from '../redux/contacts/contactsSelectors'\r\nimport operations from '../redux/contacts/contactsOperations'\r\nimport Form from '../components/Form'\r\nimport Contacts from '../components/Contacts'\r\nimport Filter from '../components/Filter'\r\nimport Modal from '../components/Modal'\r\nimport { Button } from '@material-ui/core'\r\n\r\nconst ContactsView = ({\r\n    initContacts,\r\n    initialValue,\r\n    filter,\r\n    contacts,\r\n    delContact }) => {\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.code === \"Escape\") {\r\n            setShowModal(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        initContacts();\r\n        window.addEventListener(\"keydown\", handleKeyDown);\r\n    },\r\n        [handleKeyDown, initContacts]\r\n    );\r\n\r\n    const toggleModal = () => {\r\n        setShowModal(!showModal);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    return (<div>\r\n        <Button\r\n            style={{ margin: '10px auto 10px auto' }}\r\n            onClick={toggleModal}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n        >\r\n            New contact\r\n            </Button>\r\n        <br />\r\n        <Filter\r\n            value={initialValue}\r\n            onChangeFilter={filter}\r\n        />\r\n        <Contacts\r\n            contacts={contacts}\r\n            onDelete={delContact}\r\n        />\r\n\r\n        <Fragment>\r\n            {showModal &&\r\n                <Modal\r\n                    onClose={toggleModal}\r\n                    closeModal={closeModal}\r\n                >\r\n                    <Form closeModal={closeModal} />\r\n                </Modal>}\r\n        </Fragment>\r\n    </div>\r\n    );\r\n};\r\n\r\nContactsView.propTypes = {\r\n    initialValue: PropTypes.string,\r\n    onDelete: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: selectors.getFilteredContacts(state),\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        initContacts: () => dispatch(operations.fetchContacts()),\r\n        delContact: id => dispatch(operations.delContact(id)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\"\r\nimport { NavLink } from 'react-router-dom'\r\nimport { authSelectors } from '../../redux/auth'\r\n// import Heading from '../Heading'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport Link from '@material-ui/core/Link'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: '#fff',\r\n    },\r\n\r\n    item: {\r\n        margin: 'auto 15px auto 15px',\r\n        color: '#fff',\r\n    }\r\n}));\r\n\r\nconst Navigation = () => {\r\n    const isAuthenticated = useSelector(state => authSelectors.getIsAuthenticated(state));\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <NavLink\r\n                className=\"s.link\"\r\n                to=\"/\"\r\n                exact\r\n            >\r\n                <HomeIcon className={classes.link} />\r\n                <span role=\"img\" aria-label=\"Иконка приветствия\"></span>\r\n            </NavLink>\r\n\r\n            {isAuthenticated &&\r\n                <NavLink\r\n                    to=\"/contacts\"\r\n                    exact\r\n                >\r\n                    <Typography variant=\"h6\" className={classes.link}>\r\n                        <Link\r\n                            className={classes.item}\r\n                            component=\"button\"\r\n                            variant=\"h6\"\r\n                            color='initial'\r\n                        >\r\n                            Contacts\r\n                        </Link>\r\n                    </Typography>\r\n                </NavLink>\r\n            }\r\n        </ThemeProvider >\r\n    )\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { authSelectors, authOperations } from '../../redux/auth'\r\n// import defaultAvatar from '../../images/defaultAvatar.jpg'\r\n// import s from './UserMenu.module.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Box from '@material-ui/core/Box'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    wrap: {\r\n        display: 'flex',\r\n        marginLeft: 'auto',\r\n    },\r\n    nameWrap: {\r\n        display: 'flex',\r\n        flexDirection: 'column-reverse',\r\n    },\r\n    small: {\r\n        margin: '5px auto 5px auto',\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n        fontSize: '10px',\r\n    },\r\n    item: {\r\n        whiteSpace: 'nowrap',\r\n        margin: 'auto 0px auto 15px',\r\n    },\r\n    button: {\r\n        padding: '0px 0px 0px 0px',\r\n        margin: 'auto 0px auto 15px',\r\n        backgroundColor: 'transparent'\r\n    }\r\n}));\r\n\r\nconst UserMenu = () => {\r\n    const name = useSelector(state => authSelectors.getUsername(state));\r\n    const dispatch = useDispatch();\r\n\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={classes.wrap}>\r\n                <div className={classes.nameWrap}>\r\n                    <Box\r\n                        variant=\"h6\"\r\n                        className={classes.title}>\r\n                        {name}\r\n                    </Box>\r\n                    <Avatar\r\n                        className={classes.small}\r\n                        alt={name} src='../../images/defaultAvatar.jpg'\r\n                    />\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        type='button'\r\n                        onClick={() => dispatch(authOperations.logOut())}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        <ExitToAppIcon />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default UserMenu;","import { NavLink } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Link from '@material-ui/core/Link'\r\nimport { ThemeProvider, useTheme, makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    wrap: {\r\n        display: 'flex',\r\n        margin: '0px  auto 0px 0px',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: '#fff',\r\n    },\r\n\r\n    item: {\r\n        margin: 'auto 15px auto 15px',\r\n        color: '#fff',\r\n    }\r\n}));\r\n\r\nconst AuthNAv = () => {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container className={classes.wrap} maxWidth=\"lg\">\r\n                <NavLink\r\n                    to='/register'\r\n                    exact\r\n                >\r\n                    <Typography variant=\"h6\" className={classes.link}>\r\n                        <Link\r\n                            className={classes.item}\r\n                            component=\"button\"\r\n                            variant=\"h6\"\r\n                            color='initial'\r\n                        >\r\n                            Register\r\n                            </Link>\r\n                    </Typography>\r\n                </NavLink>\r\n                <NavLink\r\n                    to='/login'\r\n                    exact\r\n                >\r\n                    <Typography variant=\"h6\" className={classes.link}>\r\n                        <Link\r\n                            className={classes.item}\r\n                            component=\"button\"\r\n                            variant=\"h6\"\r\n                            color='initial'\r\n                        >\r\n                            Login\r\n                        </Link>\r\n                    </Typography>\r\n                </NavLink>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default AuthNAv;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Navigation from '../Navigation'\r\nimport UserMenu from '../UserMenu'\r\nimport AuthNav from '../AuthHav'\r\nimport { authSelectors } from '../../redux/auth'\r\nimport AppBarStyle from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { useTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrap: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        width: '100%',\r\n        margin: '0px 0px 0px 0px ',\r\n        padding: '5px 0px 5px 0px'\r\n    }\r\n}));\r\n\r\nconst AppBar = () => {\r\n    const isAuthenticated = useSelector(state => authSelectors.getIsAuthenticated(state));\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppBarStyle position=\"static\">\r\n                <Toolbar>\r\n                    <Navigation />\r\n                    {isAuthenticated ?\r\n                        <UserMenu />\r\n                        :\r\n                        <AuthNav />}\r\n                </Toolbar>\r\n            </AppBarStyle>\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default AppBar;\r\n","export default {\r\n    homeView: '/',\r\n    registerPage: '/register',\r\n    loginPage: '/login',\r\n    contactsPage: '/contacts'\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated && routeProps.restricted ? (\r\n                <Redirect to={redirectTo} />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst errorPopup = createAction('error/showNotification');\r\n\r\nexport default {\r\n    errorPopup,\r\n}\r\n","// import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import authActions from './authActions';\r\nimport notificationActions from './notificationsAction';\r\n\r\nconst initialNotificationState = { message: '', error: '' };\r\n\r\nconst notification = createReducer(initialNotificationState, {\r\n    [notificationActions.errorPopup]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default notification;\r\n","import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { authOperations } from './redux/auth'\r\nimport ContactsView from './views/ContactsView'\r\nimport AppBar from './components/AppBar'\r\n// import Container from './components/Container'\r\nimport routes from './routes/routes'\r\nimport PrivateRoute from './routes/PrivateRoute'\r\nimport PublicRoute from './routes/PublicRoute'\r\nimport { notificationActions } from './redux/notification'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\n// const ContactsView = lazy(() => import('./views/ContactsView'));\r\n\r\nconst App = ({ error, authError, showNotification, filter }) => {\r\n  // const { onGetCurretnUser, showNotification } = useDispatch({\r\n  //   // onGetCurretnUser: authOperations.getCurrentUser,\r\n  //   showNotification: notificationActions.errorPopup,\r\n  // });\r\n\r\n  const notification = useSelector(state => state.notification);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  },\r\n    []\r\n  );\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar />\r\n      <Suspense fallback={<p>Loading...</p>}> {/*fallback={<Preloader />}>*/}\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            // redirectTo='/'\r\n            path={routes.homeView}\r\n            component={HomeView} />\r\n          <PublicRoute\r\n            restricted\r\n            redirectTo='/login'\r\n            path={routes.loginPage}\r\n            component={LoginView}\r\n          />\r\n          <PublicRoute\r\n            restricted\r\n            redirectTo='/register'\r\n            path={routes.registerPage}\r\n            component={RegisterView}\r\n          />\r\n          <PrivateRoute\r\n            redirectTo='/contacts'\r\n            path={routes.contactsPage}\r\n            component={ContactsView}\r\n          />\r\n          <Redirect to={routes.homeView} />\r\n        </Switch>\r\n      </Suspense>\r\n      {notification.message && <div style={{ backgroundColor: 'red', color: '#fff', padding: '15px', position: 'absolute' }}>\r\n        <span>\r\n          <div\r\n            // onClick={() => { showNotification({ message: '', error: '' }) }}\r\n            onClick={dispatch(notificationActions.errorPopup({ message: '', error: '' }))}\r\n          >\r\n            X\r\n          </div>\r\n          {notification.message}\r\n          {/* {notification.error} */}\r\n        </span>\r\n      </div>}\r\n      {/* </Container > */}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   // console.log(state.auth.error, state);\r\n//   return {\r\n//     notification: state.notification,\r\n//   }\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   showNotification: notificationActions.errorPopup,\r\n// };\r\n\r\nexport default App;","import { createReducer, combineReducers } from '@reduxjs/toolkit'\r\nimport {\r\n    initContactsRequest,\r\n    initContactsSuccess,\r\n    initContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    delContactRequest,\r\n    delContactSuccess,\r\n    delContactError,\r\n    changeFilter,\r\n} from './contactsActions'\r\n\r\nconst initialState = {\r\n    contacts: {\r\n        items: [],\r\n        filter: '',\r\n        error: '',\r\n    },\r\n};\r\n\r\nconst items = createReducer([], {\r\n    [initContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n    [delContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [initContactsRequest]: () => true,\r\n    [initContactsSuccess]: () => false,\r\n    [initContactsError]: () => false,\r\n\r\n    [delContactRequest]: () => true,\r\n    [delContactSuccess]: () => false,\r\n    [delContactError]: () => false,\r\n\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(initialState.contacts.filter, {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});\r\n\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport contactsReducer from './contacts/contactsReducer'\r\nimport notificationReducer from './notification/notificationsReducer'\r\nimport loading from './contacts/contactsReducer'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport { authReducer } from './auth'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [\r\n                FLUSH,\r\n                REHYDRATE,\r\n                PAUSE,\r\n                PERSIST,\r\n                PURGE,\r\n                REGISTER,\r\n            ],\r\n        },\r\n    }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n        notification: notificationReducer,\r\n    },\r\n    loading,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store'\r\n// import 'react-notifications/lib/notifications.css';\r\n// import 'fontsource-roboto';\r\n// import 'modern-normalize/modern-normalize.css';\r\n// import './styles/base.scss';\r\nimport { StylesProvider } from '@material-ui/core/styles';\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate loading={null} persistor={store.persistor}>\r\n      <BrowserRouter>\r\n        <StylesProvider injectFirst>\r\n          <App />\r\n        </StylesProvider>\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1fdti\",\"label\":\"Form_label__Of5OE\",\"input\":\"Form_input__8oCOn\",\"button\":\"Form_button__HPsc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__8vroI\",\"item\":\"Contacts_item__Pjis0\",\"button\":\"Contacts_button__hbW6U\",\"item-enter\":\"Contacts_item-enter__ZcyTO\",\"item-enter-active\":\"Contacts_item-enter-active__39yA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3mxRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2xg8W\",\"Modal\":\"Modal_Modal__3tI5L\"};"],"sourceRoot":""}